lines.linewidth: 3.0               # line width in points
lines.linestyle: -                 # solid line
lines.color:     C0                # has no affect on plot(); see axes.prop_cycle
lines.marker:          "o"      # the default marker
lines.markerfacecolor: auto        # the default marker face color
lines.markeredgecolor: auto        # the default marker edge color
lines.markeredgewidth: 1.0         # the line width around the marker symbol
lines.markersize:      10          # marker size, in points
lines.dash_joinstyle:  round       # {miter, round, bevel}
lines.dash_capstyle:   butt        # {butt, round, projecting}
lines.solid_joinstyle: round       # {miter, round, bevel}
lines.solid_capstyle:  projecting  # {butt, round, projecting}
lines.antialiased: True            # render lines in antialiased (no jaggies)


font.family  : serif
font.serif   : CMU Serif
font.weight  : bold
font.size    : 35
text.usetex  : true

axes.facecolor:     gainsboro   # axes background color
axes.edgecolor:     black   # axes edge color
axes.linewidth:     1.0     # edge line width
axes.grid:          True   # display grid or not
axes.grid.axis:     both    # which axis the grid should apply to
axes.grid.which:    major   # grid lines at {major, minor, both} ticks
axes.titlelocation: center  # alignment of the title: {left, right, center}
axes.titlesize:     large   # font size of the axes title
axes.titleweight:   normal  # font weight of title
axes.titlecolor:    auto    # color of the axes title, auto falls back to
                            # text.color as default value
axes.titley:        None    # position title (axes relative units).  None implies auto
axes.titlepad:      6.0     # pad between axes and title in points
axes.labelsize:     medium  # font size of the x and y labels
axes.labelpad:      4.0     # space between label and axis
axes.labelweight:   normal  # weight of the x and y labels
axes.labelcolor:    black
axes.axisbelow:     line    # draw axis gridlines and ticks:
                            #     - below patches (True)
                            #     - above patches but below lines ('line')
                            #     - above all (False)

axes.formatter.limits: -5, 6  # use scientific notation if log10
                              # of the axis range is smaller than the
                              # first or larger than the second
axes.formatter.use_locale: False  # When True, format tick labels
                                  # according to the user's locale.
                                  # For example, use ',' as a decimal
                                  # separator in the fr_FR locale.
axes.formatter.use_mathtext: False  # When True, use mathtext for scientific
                                    # notation.
axes.formatter.min_exponent: 0  # minimum exponent to format in scientific notation
axes.formatter.useoffset: True  # If True, the tick label formatter
                                # will default to labeling ticks relative
                                # to an offset when the data range is
                                # small compared to the minimum absolute
                                # value of the data.
axes.formatter.offset_threshold: 4  # When useoffset is True, the offset
                                    # will be used when it can remove
                                    # at least this number of significant
                                    # digits from tick labels.

axes.spines.left:   True  # display axis spines
axes.spines.bottom: True
axes.spines.top:    True
axes.spines.right:  True
axes.prop_cycle: cycler('color', ['red','blue','green','orange'])

legend.loc:           best
legend.frameon:       True     # if True, draw the legend on a background patch
legend.framealpha:    0.8      # legend patch transparency
legend.facecolor:     inherit  # inherit from axes.facecolor; or color spec
legend.edgecolor:     0.8      # background patch boundary color
legend.fancybox:      True     # if True, use a rounded box for the
                               # legend background, else a rectangle
legend.shadow:        False    # if True, give background a shadow effect
legend.numpoints:     1        # the number of marker points in the legend line
legend.scatterpoints: 1        # number of scatter points
legend.markerscale:   1.0      # the relative size of legend markers vs. original
legend.fontsize:      medium
legend.labelcolor:    None
legend.title_fontsize: None    # None sets to the same as the default axes.




figure.titlesize:   large     # size of the figure title (``Figure.suptitle()``)
figure.titleweight: normal    # weight of the figure title
figure.labelsize:   large     # size of the figure label (``Figure.sup[x|y]label()``)
figure.labelweight: normal    # weight of the figure label
figure.figsize:     15,10  # figure size in inches
figure.dpi:         100       # figure dots per inch
figure.facecolor:   white     # figure face color
figure.edgecolor:   white     # figure edge color
figure.frameon:     True      # enable figure frame
#figure.max_open_warning: 20   # The maximum number of figures to open through
                              # the pyplot interface before emitting a warning.
                              # If less than one this feature is disabled.
#figure.raise_window : True    # Raise the GUI window to front when show() is called.

# The figure subplot parameters.  All dimensions are a fraction of the figure width and height.
figure.subplot.left:   0.125  # the left side of the subplots of the figure
figure.subplot.right:  0.9    # the right side of the subplots of the figure
figure.subplot.bottom: 0.11   # the bottom of the subplots of the figure
figure.subplot.top:    0.88   # the top of the subplots of the figure
figure.subplot.wspace: 0.2    # the amount of width reserved for space between subplots,
                              # expressed as a fraction of the average axis width
figure.subplot.hspace: 0.2    # the amount of height reserved for space between subplots,
                              # expressed as a fraction of the average axis height

# Figure layout
figure.autolayout: True  # When True, automatically adjust subplot
                          # parameters to make the plot fit the figure
                          # using `tight_layout`
figure.constrained_layout.use: False  # When True, automatically make plot
                                      # elements fit on the figure. (Not
                                      # compatible with `autolayout`, above).
# Padding (in inches) around axes; defaults to 3/72 inches, i.e. 3 points.
figure.constrained_layout.h_pad:  0.01
figure.constrained_layout.w_pad:  0.01
# Spacing between subplots, relative to the subplot sizes.  Much smaller than for
# tight_layout (figure.subplot.hspace, figure.subplot.wspace) as constrained_layout
# already takes surrounding texts (titles, labels, # ticklabels) into account.
figure.constrained_layout.hspace: 0.02
figure.constrained_layout.wspace: 0.02
